/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmTextEditor.java
 *
 * Created on Feb 15, 2011, 8:10:29 AM
 */

package com.cis238.texteditor;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author armstrod
 */
public class frmTextEditor extends javax.swing.JFrame {

    //global variables
    File myFile;
    int encyrptNum = 0;

    /** Creates new form frmTextEditor */
    public frmTextEditor() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtaEditor = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuFileNew = new javax.swing.JMenuItem();
        mnuFileOpen = new javax.swing.JMenuItem();
        mnuFileSave = new javax.swing.JMenuItem();
        mnuFileSaveAs = new javax.swing.JMenuItem();
        mnuFileExit = new javax.swing.JMenuItem();
        mnuEncryption = new javax.swing.JMenu();
        mnuEncryptionEncrypt = new javax.swing.JMenuItem();
        mnuDecript = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 250));

        jtaEditor.setColumns(20);
        jtaEditor.setRows(5);
        jScrollPane1.setViewportView(jtaEditor);

        mnuFile.setMnemonic('F');
        mnuFile.setText("File");

        mnuFileNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        mnuFileNew.setMnemonic('N');
        mnuFileNew.setText("New");
        mnuFileNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileNewActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileNew);

        mnuFileOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        mnuFileOpen.setMnemonic('O');
        mnuFileOpen.setText("Open");
        mnuFileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileOpenActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileOpen);

        mnuFileSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        mnuFileSave.setMnemonic('S');
        mnuFileSave.setText("Save");
        mnuFileSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileSaveActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileSave);

        mnuFileSaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        mnuFileSaveAs.setMnemonic('a');
        mnuFileSaveAs.setText("Save as...");
        mnuFileSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileSaveAsActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileSaveAs);

        mnuFileExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        mnuFileExit.setMnemonic('x');
        mnuFileExit.setText("Exit");
        mnuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileExitActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileExit);

        jMenuBar1.add(mnuFile);

        mnuEncryption.setMnemonic('y');
        mnuEncryption.setText("Encryption");

        mnuEncryptionEncrypt.setMnemonic('E');
        mnuEncryptionEncrypt.setText("Encrypt");
        mnuEncryptionEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEncryptionEncryptActionPerformed(evt);
            }
        });
        mnuEncryption.add(mnuEncryptionEncrypt);

        mnuDecript.setText("Decrypt");
        mnuDecript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuDecriptActionPerformed(evt);
            }
        });
        mnuEncryption.add(mnuDecript);

        jMenuBar1.add(mnuEncryption);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuFileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileOpenActionPerformed
        //clear the text area
        this.jtaEditor.setText("");

        //choose the file to open
        JFileChooser myFileChooser = new JFileChooser();
        myFileChooser.showOpenDialog(this);

        //make sure the user didn't click cancel
        if(myFileChooser.getSelectedFile() != null)
        {
            //get a file object
            myFile = new File(myFileChooser.getSelectedFile().getPath());

            try
            {
                // create file reader
                FileReader myReader = new FileReader(myFile);

                // create buffered reader
                BufferedReader myBuffer = new BufferedReader(myReader);

                // read a line from the text file
                String strLine = myBuffer.readLine();

                // loop through the rest of the lines
                while(strLine != null)
                {
                    this.jtaEditor.append(strLine);
                    this.jtaEditor.append("\n");
                    strLine = myBuffer.readLine();
                }

                //close stuff
                myBuffer.close();
                myReader.close();
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e.toString());
            }
        }
    }//GEN-LAST:event_mnuFileOpenActionPerformed

    private void mnuFileSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileSaveActionPerformed
        // make sure file is not null
        if(myFile != null)
        {
            // call method to save
            saveFileContents();
        }
        else
        {
            // if new, show save as dialog
            mnuFileSaveAsActionPerformed(evt);
        }
    }//GEN-LAST:event_mnuFileSaveActionPerformed

    private void mnuFileNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileNewActionPerformed
        // clear text area
        this.jtaEditor.setText("");

        // clear file object
        myFile = null;
        
    }//GEN-LAST:event_mnuFileNewActionPerformed

    private void mnuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileExitActionPerformed
        // exit app
        System.exit(0);
    }//GEN-LAST:event_mnuFileExitActionPerformed

    private void mnuFileSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileSaveAsActionPerformed
        // change file object
        JFileChooser myChooser = new JFileChooser();
        myChooser.setDialogTitle("Save As...");
        myChooser.showSaveDialog(this);

        // make sure user didn't click cancel
        if(myChooser.getSelectedFile() != null)
        {
            // change to new file object
            myFile = new File(myChooser.getSelectedFile().getPath());

            // call method to save
            saveFileContents();
        }
    }//GEN-LAST:event_mnuFileSaveAsActionPerformed

    private void mnuEncryptionEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEncryptionEncryptActionPerformed
        // call encrypt method to shift characters
        encyrptNum = Integer.parseInt((JOptionPane.showInputDialog("Encyrption Shift?")));
        this.jtaEditor.setText(encrypt(this.jtaEditor.getText(), this.encyrptNum));
    }//GEN-LAST:event_mnuEncryptionEncryptActionPerformed

    private void mnuDecriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuDecriptActionPerformed
        // TODO add your handling code here:
        this.jtaEditor.setText(encrypt(this.jtaEditor.getText(), -encyrptNum));
    }//GEN-LAST:event_mnuDecriptActionPerformed

    private void saveFileContents()
    {
            try
            {
                // create file writer
                FileWriter myWriter = new FileWriter(myFile);

                // create print writer
                PrintWriter myPrinter = new PrintWriter(myWriter);

                // write the contents of the text area to the file
                myPrinter.print(this.jtaEditor.getText());

                // close stuff
                myPrinter.close();
                myWriter.close();

                // message to user
                JOptionPane.showMessageDialog(this, "Changes were saved successfully.");

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e.toString());
            }
    }

    private static String encrypt(String s, int num)
    {
        // local variables
        
        String strEncrypted = "";
        char myChar = 0;

        // loop through letter by letter
        for(int i = 0; i < s.length(); i++)
        {
            // get letter at (i)
            myChar = s.charAt(i);

            // skip blanks
            if (myChar != ' ')
            {
                //check for lower case letters first
                if ((myChar >= 'a' && myChar <= 'z'))
                {
                    // shift letter
                    myChar += num;

                    // if past 'z' wrap around
                    if (myChar > 'z')
                    myChar -= 26;

                    if (myChar < 'a')
                    myChar += 26;
                }
                //then check upper case letters
                if ((myChar >= 'A' && myChar <= 'Z'))
                {
                    // shift letter
                    myChar += num;

                    // if past 'z' wrap around
                    if (myChar > 'Z')
                    myChar -= 26;

                    if (myChar < 'A')
                    myChar += 26;
                }
            }

            // add encrypted character to result string
            strEncrypted += myChar;
        }

        return strEncrypted;
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmTextEditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jtaEditor;
    private javax.swing.JMenuItem mnuDecript;
    private javax.swing.JMenu mnuEncryption;
    private javax.swing.JMenuItem mnuEncryptionEncrypt;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuFileExit;
    private javax.swing.JMenuItem mnuFileNew;
    private javax.swing.JMenuItem mnuFileOpen;
    private javax.swing.JMenuItem mnuFileSave;
    private javax.swing.JMenuItem mnuFileSaveAs;
    // End of variables declaration//GEN-END:variables

}
